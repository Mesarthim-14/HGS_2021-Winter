//=====================================================================
//
// カメラ通常状態管理クラス [state_camera_normal.h]
// Author : Konishi Yuuto
//
//=====================================================================

//=====================================================================
// インクルードファイル
//=====================================================================
#include "state_camera_normal.h"
#include "library.h"
#include "manager.h"
#include "game.h"
#include "player.h"
#include "camera.h"
#include "keyboard.h"
#include "renderer.h"

//=====================================================================
// マクロ定義
//=====================================================================
#define INPUT_CONVERSION        (D3DXToRadian(1.0f))    // スティック入力変化量
#define PLAYER_HEIGHT           (0.0f)                  // 注視点の高さ
#define CAMERA_MIN_HIGHT        (2.0f)                  // カメラの最低高度
#define PLAYER_CAMERA_HEIGHT    (300.0f)                // プレイヤーの高さ
#define CAMERA_DISTANCE         (2000.0f)               // プレイヤーとカメラの距離

//=====================================================================
// コンストラクタ
//=====================================================================
CCameraStateNormal::CCameraStateNormal()
{
}

//=====================================================================
// デストラクタ
//=====================================================================
CCameraStateNormal::~CCameraStateNormal()
{

}

//=====================================================================
// インスタンス生成
//=====================================================================
CCameraStateNormal * CCameraStateNormal::Create()
{
    // メモリ確保
    CCameraStateNormal *pStateNormal = new CCameraStateNormal;
    if (pStateNormal)
    {
        // 初期化処理
        pStateNormal->Init();
        return pStateNormal;
    }

    return nullptr;
}

//=====================================================================
// 初期化処理
//=====================================================================
void CCameraStateNormal::Init()
{

}

//=====================================================================
// 更新処理
//=====================================================================
void CCameraStateNormal::Update()
{
    CCamera *pCamera = CManager::GetInstance()->GetCamera();
    if (!pCamera)
    {
        return;
    }

    // キーボード更新
    KeyBoardMove(pCamera);
}

//=====================================================================
// キーボード処理
//=====================================================================
void CCameraStateNormal::KeyBoardMove(CCamera* &pCamera)
{
}